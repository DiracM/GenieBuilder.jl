{
    "type": "toggle", 
    "label": "Toggle", 
    "tagName": "Q-TOGGLE", 
    "category": "Widgets", 
    "content": "<q-toggle />", 
    "media": "images/icons/components/ui_components/toggle.png", 
    "traits": [
  {
    "label": "Data Binding",
    "name": "v-model",
    "type": "select",
    "options": []
  },
  {
    "label": "name",
    "name": ":name",
    "type": "String",
    "desc": "Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL",
    "category": "behavior",
    "examples": [
      "car_id"
    ],
    "enabled": true
  },
  {
    "label": "size",
    "name": ":size",
    "type": "String",
    "desc": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)",
    "category": "style",
    "examples": [
      "16px",
      "2rem",
      "xs",
      "md"
    ],
    "enabled": true
  },
  {
    "label": "model-value",
    "name": ":model-value",
    "type": [
      "Any",
      "Array"
    ],
    "desc": "Model of the component; Either use this property (along with a listener for 'update:model-value' event) OR use v-model directive",
    "category": "model",
    "examples": [
      "false",
      "['car', 'building']"
    ],
    "enabled": true
  },
  {
    "label": "val",
    "name": ":val",
    "type": "Any",
    "desc": "Works when model ('value') is Array. It tells the component which value should add/remove when ticked/unticked",
    "category": "model",
    "examples": [
      "car"
    ],
    "enabled": true
  },
  {
    "label": "true-value",
    "name": ":true-value",
    "type": "Any",
    "desc": "What model value should be considered as checked/ticked/on?",
    "category": "model",
    "examples": [
      "Agreed"
    ],
    "enabled": true
  },
  {
    "label": "false-value",
    "name": ":false-value",
    "type": "Any",
    "desc": "What model value should be considered as unchecked/unticked/off?",
    "category": "model",
    "examples": [
      "Disagree"
    ],
    "enabled": true
  },
  {
    "label": "indeterminate-value",
    "name": ":indeterminate-value",
    "type": "Any",
    "desc": "What model value should be considered as 'indeterminate'?",
    "category": "behavior",
    "examples": [
      0,
      "not_answered"
    ],
    "enabled": true
  },
  {
    "label": "toggle-order",
    "name": ":toggle-order",
    "type": "String",
    "desc": "Determines toggle order of the two states ('t' stands for state of true, 'f' for state of false); If 'toggle-indeterminate' is true, then the order is: indet -> first state -> second state -> indet (and repeat), otherwise: indet -> first state -> second state -> first state -> second state -> ...",
    "category": "behavior",
    "enabled": true
  },
  {
    "label": "toggle-indeterminate",
    "name": ":toggle-indeterminate",
    "type": "Boolean",
    "desc": "When user clicks/taps on the component, should we toggle through the indeterminate state too?",
    "category": "behavior",
    "enabled": true
  },
  {
    "label": "label",
    "name": ":label",
    "type": "String",
    "desc": "Label to display along the component (or use the default slot instead of this prop)",
    "category": "label",
    "examples": [
      "I agree with the Terms and Conditions"
    ],
    "enabled": true
  },
  {
    "label": "left-label",
    "name": ":left-label",
    "type": "Boolean",
    "desc": "Label (if any specified) should be displayed on the left side of the component",
    "category": "label",
    "enabled": true
  },
  {
    "label": "checked-icon",
    "name": ":checked-icon",
    "type": "String",
    "desc": "The icon to be used when the toggle is on",
    "category": "icons",
    "examples": [
      "visibility"
    ],
    "enabled": true
  },
  {
    "label": "unchecked-icon",
    "name": ":unchecked-icon",
    "type": "String",
    "desc": "The icon to be used when the toggle is off",
    "category": "icons",
    "examples": [
      "visibility_off"
    ],
    "enabled": true
  },
  {
    "label": "indeterminate-icon",
    "name": ":indeterminate-icon",
    "type": "String",
    "desc": "The icon to be used when the model is indeterminate",
    "category": "icons",
    "examples": [
      "help"
    ],
    "enabled": true
  },
  {
    "label": "color",
    "name": ":color",
    "type": "String",
    "desc": "Color name for component from the Quasar Color Palette",
    "category": "style",
    "examples": [
      "primary",
      "teal-10"
    ],
    "enabled": true
  },
  {
    "label": "keep-color",
    "name": ":keep-color",
    "type": "Boolean",
    "desc": "Should the color (if specified any) be kept when the component is unticked/ off?",
    "category": "behavior",
    "enabled": true
  },
  {
    "label": "dark",
    "name": ":dark",
    "type": "Boolean",
    "desc": "Notify the component that the background is a dark color",
    "category": "style",
    "enabled": true
  },
  {
    "label": "dense",
    "name": ":dense",
    "type": "Boolean",
    "desc": "Dense mode; occupies less space",
    "category": "style",
    "enabled": true
  },
  {
    "label": "disable",
    "name": ":disable",
    "type": "Boolean",
    "desc": "Put component in disabled mode",
    "category": "state",
    "enabled": true
  },
  {
    "label": "tabindex",
    "name": ":tabindex",
    "type": [
      "Number",
      "String"
    ],
    "desc": "Tabindex HTML attribute value",
    "category": "general",
    "examples": [
      "0",
      "100"
    ],
    "enabled": true
  },
  {
    "label": "icon",
    "name": ":icon",
    "type": "String",
    "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
    "category": "content",
    "examples": [
      "map",
      "ion-add",
      "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
      "img:path/to/some_image.png"
    ],
    "enabled": true
  },
  {
    "label": "icon-color",
    "name": ":icon-color",
    "type": "String",
    "desc": "Override default icon color (for truthy state only); Color name for component from the Quasar Color Palette",
    "category": "style",
    "examples": [
      "primary",
      "teal-10"
    ],
    "enabled": true
  }
]
}