{
    "type": "button", 
    "label": "Button", 
    "tagName": "Q-BTN", 
    "category": "Forms", 
    "content": "<q-btn />", 
    "media": "images/icons/components/ui_components/button.png", 
    "traits": [
  {
    "label": "Reactive Model",
    "name": "v-model",
    "type": "select",
    "options": []
  },
  {
    "label": "size",
    "name": ":size",
    "type": "String",
    "desc": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)",
    "category": "style",
    "examples": [
      "16px",
      "2rem",
      "xs",
      "md"
    ]
  },
  {
    "label": "type",
    "name": ":type",
    "type": "String",
    "desc": "1) Define the button native type attribute (submit, reset, button) or 2) render component with <a> tag so you can access events even if disable or 3) Use 'href' prop and specify 'type' as a media tag",
    "category": "general",
    "examples": [
      "a",
      "submit",
      "button",
      "reset",
      "image/png",
      "href=\"https://quasar.dev\" target=\"_blank\""
    ]
  },
  {
    "label": "to",
    "name": ":to",
    "type": [
      "String",
      "Object"
    ],
    "desc": "Equivalent to Vue Router <router-link> 'to' property; Superseded by 'href' prop if used",
    "category": "navigation",
    "examples": [
      "/home/dashboard",
      ":to=\"{ name: 'my-route-name' }\""
    ]
  },
  {
    "label": "replace",
    "name": ":replace",
    "type": "Boolean",
    "desc": "Equivalent to Vue Router <router-link> 'replace' property; Superseded by 'href' prop if used",
    "category": "navigation"
  },
  {
    "label": "href",
    "name": ":href",
    "type": "String",
    "desc": "Native <a> link href attribute; Has priority over the 'to' and 'replace' props",
    "category": "navigation",
    "examples": [
      "https://quasar.dev",
      "href=\"https://quasar.dev\" target=\"_blank\""
    ]
  },
  {
    "label": "target",
    "name": ":target",
    "type": "String",
    "desc": "Native <a> link target attribute; Use it only with 'to' or 'href' props",
    "category": "navigation",
    "examples": [
      "_blank",
      "_self",
      "_parent",
      "_top"
    ]
  },
  {
    "label": "label",
    "name": ":label",
    "type": [
      "String",
      "Number"
    ],
    "desc": "The text that will be shown on the button",
    "category": "content",
    "examples": [
      "Button Label"
    ]
  },
  {
    "label": "icon",
    "name": ":icon",
    "type": "String",
    "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
    "category": "content",
    "examples": [
      "map",
      "ion-add",
      "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
      "img:path/to/some_image.png"
    ]
  },
  {
    "label": "icon-right",
    "name": ":icon-right",
    "type": "String",
    "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
    "category": "content",
    "examples": [
      "map",
      "ion-add",
      "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
      "img:path/to/some_image.png"
    ]
  },
  {
    "label": "outline",
    "name": ":outline",
    "type": "Boolean",
    "desc": "Use 'outline' design",
    "category": "style"
  },
  {
    "label": "flat",
    "name": ":flat",
    "type": "Boolean",
    "desc": "Use 'flat' design",
    "category": "style"
  },
  {
    "label": "unelevated",
    "name": ":unelevated",
    "type": "Boolean",
    "desc": "Remove shadow",
    "category": "style"
  },
  {
    "label": "rounded",
    "name": ":rounded",
    "type": "Boolean",
    "desc": "Applies a more prominent border-radius for a squared shape button",
    "category": "style"
  },
  {
    "label": "push",
    "name": ":push",
    "type": "Boolean",
    "desc": "Use 'push' design",
    "category": "style"
  },
  {
    "label": "square",
    "name": ":square",
    "type": "Boolean",
    "desc": "Removes border-radius so borders are squared",
    "category": "style"
  },
  {
    "label": "glossy",
    "name": ":glossy",
    "type": "Boolean",
    "desc": "Applies a glossy effect",
    "category": "style"
  },
  {
    "label": "fab",
    "name": ":fab",
    "type": "Boolean",
    "desc": "Makes button size and shape to fit a Floating Action Button",
    "category": "style"
  },
  {
    "label": "fab-mini",
    "name": ":fab-mini",
    "type": "Boolean",
    "desc": "Makes button size and shape to fit a small Floating Action Button",
    "category": "style"
  },
  {
    "label": "padding",
    "name": ":padding",
    "type": "String",
    "desc": "Apply custom padding (vertical [horizontal]); Size in CSS units, including unit name or standard size name (none|xs|sm|md|lg|xl); Also removes the min width and height when set",
    "category": "style",
    "examples": [
      "16px",
      "10px 5px",
      "2rem",
      "xs",
      "md lg",
      "2px 2px 5px 7px"
    ]
  },
  {
    "label": "color",
    "name": ":color",
    "type": "String",
    "desc": "Color name for component from the Quasar Color Palette",
    "category": "style",
    "examples": [
      "primary",
      "teal-10"
    ]
  },
  {
    "label": "text-color",
    "name": ":text-color",
    "type": "String",
    "desc": "Overrides text color (if needed); Color name from the Quasar Color Palette",
    "category": "style",
    "examples": [
      "primary",
      "teal-10"
    ]
  },
  {
    "label": "no-caps",
    "name": ":no-caps",
    "type": "Boolean",
    "desc": "Avoid turning label text into caps (which happens by default)",
    "category": "content"
  },
  {
    "label": "no-wrap",
    "name": ":no-wrap",
    "type": "Boolean",
    "desc": "Avoid label text wrapping",
    "category": "content"
  },
  {
    "label": "dense",
    "name": ":dense",
    "type": "Boolean",
    "desc": "Dense mode; occupies less space",
    "category": "style"
  },
  {
    "label": "ripple",
    "name": ":ripple",
    "type": [
      "Boolean",
      "Object"
    ],
    "desc": "Configure material ripple (disable it by setting it to 'false' or supply a config object)",
    "category": "style",
    "examples": [
      false,
      "{ early: true, center: true, color: 'teal', keyCodes: [] }"
    ]
  },
  {
    "label": "tabindex",
    "name": ":tabindex",
    "type": [
      "Number",
      "String"
    ],
    "desc": "Tabindex HTML attribute value",
    "category": "general",
    "examples": [
      "0",
      "100"
    ]
  },
  {
    "label": "align",
    "name": ":align",
    "type": "String",
    "desc": "Label or content alignment",
    "category": "content"
  },
  {
    "label": "stack",
    "name": ":stack",
    "type": "Boolean",
    "desc": "Stack icon and label vertically instead of on same line (like it is by default)",
    "category": "content"
  },
  {
    "label": "stretch",
    "name": ":stretch",
    "type": "Boolean",
    "desc": "When used on flexbox parent, button will stretch to parent's height",
    "category": "content"
  },
  {
    "label": "loading",
    "name": ":loading",
    "type": "Boolean",
    "desc": "Put button into loading state (displays a QSpinner -- can be overridden by using a 'loading' slot)",
    "category": "behavior|state"
  },
  {
    "label": "disable",
    "name": ":disable",
    "type": "Boolean",
    "desc": "Put component in disabled mode",
    "category": "state"
  },
  {
    "label": "round",
    "name": ":round",
    "type": "Boolean",
    "desc": "Makes a circle shaped button",
    "category": "style"
  },
  {
    "label": "percentage",
    "name": ":percentage",
    "type": "Number",
    "desc": "Percentage (0.0 < x < 100.0); To be used along 'loading' prop; Display a progress bar on the background",
    "category": "behavior",
    "examples": [
      23
    ]
  },
  {
    "label": "dark-percentage",
    "name": ":dark-percentage",
    "type": "Boolean",
    "desc": "Progress bar on the background should have dark color; To be used along with 'percentage' and 'loading' props",
    "category": "behavior"
  }
]
}