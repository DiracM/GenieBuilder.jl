{
    "type": "knob", 
    "label": "Knob", 
    "tagName": "Q-KNOB", 
    "category": "Forms", 
    "content": "<q-knob />", 
    "media": "images/icons/components/ui_components/knob.png", 
    "traits": [
  {
    "label": "Data Binding",
    "name": "v-model",
    "type": "select",
    "options": []
  },
  {
    "label": "name",
    "name": ":name",
    "type": "String",
    "desc": "Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL",
    "category": "behavior",
    "examples": [
      "car_id"
    ],
    "enabled": true
  },
  {
    "label": "size",
    "name": ":size",
    "type": "String",
    "desc": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)",
    "category": "style",
    "examples": [
      "16px",
      "2rem",
      "xs",
      "md"
    ],
    "enabled": true
  },
  {
    "label": "model-value",
    "name": ":model-value",
    "type": "Number",
    "desc": "Any number to indicate the given value of the knob. Either use this property (along with a listener for 'update:modelValue' event) OR use the v-model directive",
    "category": "model",
    "examples": [
      "v-model=\"myValue\""
    ],
    "enabled": true
  },
  {
    "label": "min",
    "name": ":min",
    "type": "Number",
    "desc": "The minimum value that the model (the knob value) should start at",
    "category": "model",
    "examples": [
      "20",
      "5"
    ],
    "enabled": true
  },
  {
    "label": "max",
    "name": ":max",
    "type": "Number",
    "desc": "The maximum value that the model (the knob value) should go to",
    "category": "model",
    "examples": [
      "100",
      "50"
    ],
    "enabled": true
  },
  {
    "label": "inner-min",
    "name": ":inner-min",
    "type": "Number",
    "desc": "Inner minimum value of the model; Use in case you need the model value to be inside of the track's min-max values; Needs to be higher or equal to 'min' prop; Defaults to 'min' prop",
    "category": "model",
    "examples": [
      ":inner-min=\"0\""
    ],
    "enabled": true
  },
  {
    "label": "inner-max",
    "name": ":inner-max",
    "type": "Number",
    "desc": "Inner maximum value of the model; Use in case you need the model value to be inside of the track's min-max values; Needs to be lower or equal to 'max' prop; Defaults to 'max' prop",
    "category": "model",
    "examples": [
      ":inner-max=\"100\""
    ],
    "enabled": true
  },
  {
    "label": "step",
    "name": ":step",
    "type": "Number",
    "desc": "A number representing steps in the value of the model, while adjusting the knob",
    "category": "model",
    "examples": [
      "1",
      "5"
    ],
    "enabled": true
  },
  {
    "label": "reverse",
    "name": ":reverse",
    "type": "Boolean",
    "desc": "Reverses the direction of progress",
    "category": "behavior",
    "enabled": true
  },
  {
    "label": "instant-feedback",
    "name": ":instant-feedback",
    "type": "Boolean",
    "desc": "No animation when model changes",
    "category": "behavior",
    "enabled": true
  },
  {
    "label": "color",
    "name": ":color",
    "type": "String",
    "desc": "Color name for component from the Quasar Color Palette",
    "category": "style",
    "examples": [
      "primary",
      "teal-10"
    ],
    "enabled": true
  },
  {
    "label": "center-color",
    "name": ":center-color",
    "type": "String",
    "desc": "Color name for the center part of the component from the Quasar Color Palette",
    "category": "style",
    "examples": [
      "primary",
      "teal-10"
    ],
    "enabled": true
  },
  {
    "label": "track-color",
    "name": ":track-color",
    "type": "String",
    "desc": "Color name for the track of the component from the Quasar Color Palette",
    "category": "style",
    "examples": [
      "primary",
      "teal-10"
    ],
    "enabled": true
  },
  {
    "label": "font-size",
    "name": ":font-size",
    "type": "String",
    "desc": "Size of text in CSS units, including unit name. Suggestion: use 'em' units to sync with component size",
    "category": "style",
    "examples": [
      "1em",
      "16px",
      "2rem"
    ],
    "enabled": true
  },
  {
    "label": "thickness",
    "name": ":thickness",
    "type": "Number",
    "desc": "Thickness of progress arc as a ratio (0.0 < x < 1.0) of component size",
    "category": "style",
    "examples": [
      1,
      0.3
    ],
    "enabled": true
  },
  {
    "label": "angle",
    "name": ":angle",
    "type": "Number",
    "desc": "Angle to rotate progress arc by",
    "category": "content",
    "examples": [
      0,
      40,
      90
    ],
    "enabled": true
  },
  {
    "label": "show-value",
    "name": ":show-value",
    "type": "Boolean",
    "desc": "Enables the default slot and uses it (if available), otherwise it displays the 'value' prop as text; Make sure the text has enough space to be displayed inside the component",
    "category": "content|behavior",
    "enabled": true
  },
  {
    "label": "tabindex",
    "name": ":tabindex",
    "type": [
      "Number",
      "String"
    ],
    "desc": "Tabindex HTML attribute value",
    "category": "general",
    "examples": [
      "0",
      "100"
    ],
    "enabled": true
  },
  {
    "label": "disable",
    "name": ":disable",
    "type": "Boolean",
    "desc": "Put component in disabled mode",
    "category": "state",
    "enabled": true
  },
  {
    "label": "readonly",
    "name": ":readonly",
    "type": "Boolean",
    "desc": "Put component in readonly mode",
    "category": "state",
    "enabled": true
  }
]
}